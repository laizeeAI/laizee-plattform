{"openapi":"3.0.2","info":{"title":"las-web","version":"1.1.0rc7"},"paths":{"/":{"get":{"summary":"Root","description":"Returns the Version of the Package","operationId":"root__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/keywords/":{"post":{"summary":"Extract keywords","description":"Endpoint to extract keywords from text provided in the request:\n- **text**: a text or a list of texts you want to extract keywords from (required)\n- **token_based `WARNING: currently ignored`**: a flag to switch between char- and token-based\n  indices for extraction tasks.\n  Defaults to char-based (false).\n","operationId":"get_keywords_keywords__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TextRequest"}}},"required":true},"responses":{"200":{"description":"Endpoint to extract keywords from text.","content":{"application/json":{"schema":{"title":"Response Get Keywords Keywords  Post","type":"array","items":{"$ref":"#/components/schemas/ExtractKeywordsResponse"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/model/details":{"get":{"summary":"Details of the model","description":"Endpoint to return all details of the currently loaded model","operationId":"get_details_model_details_get","responses":{"200":{"description":"Endpoint to return all details of the currently loaded model.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ModelDetailsResponse"}}}}}}},"/model/tasks":{"get":{"summary":"Tasks of the model","description":"Endpoint to return a list of all available tasks of the currently loaded model","operationId":"get_tasks_model_tasks_get","responses":{"200":{"description":"Endpoint to return a list of all available tasks of the currently loaded model.","content":{"application/json":{"schema":{"title":"Response Get Tasks Model Tasks Get","type":"array","items":{"$ref":"#/components/schemas/TaskDetails"}}}}}}}},"/analyze/":{"post":{"summary":"Analyze","description":"Endpoint to analyze text provided in the request:\n- **text**: a text or a list of texts you want to analyze (required)\n- **token_based `WARNING: currently ignored`**: a flag to switch between char- and token-based\n  indices for extraction tasks.\n  Defaults to char-based (false). Affected tasks are:\n  - Named Entity Extraction (`TaskEnum.NER`)\n  - Keyword Extraction (`TaskEnum.KEYWORDS`)\n- **tasks**: A list of tasks to execute during document analysis. Defaults to empty list, which means every\n  task provided by the model will be executed. A spacy_model may ignore task, if it does not provide them.\n- **classes**: An optional list of classes which is used for prediction.\n  Defaults to an empty list. If a flair zero-shot classifier is used for classification, this is required.\n- **labels**: An optional list of labels used for prediction. Defaults to an empty list.\n  If a flair zero-shot classifier is used for named entity recognition, this is required.\n- **multi_label**: A flag to enable multi-label analysis. Defaults to false.\n","operationId":"analyze_analyze__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AnalyzeRequest"},"examples":{"default":{"summary":"NER with a single text.","description":"A plain request for Named-Entity Extraction with a single text.","value":{"text":"This is a single example text.","tasks":["NER"]}},"multi_text":{"summary":"NER with multiple texts.","description":"A request for Named-Entity Extraction with multiple texts.","value":{"text":["This are multiple example texts.","This is another example text."],"tasks":["NER"]}},"zero_shot":{"summary":"Zero-Shot Classification with multiple texts.","description":"\n                  A request for Zero-Shot Classification with multiple texts.\n                  This requires 'classes' to be set.\n                  ","value":{"text":["\n                        I heard of this restaurant because a friend in New York had Ottolenghi's\n                        cookbook and cooked something for us\n                        ","\n                        The burrata with blood orange and honey was great, ample portion of burrata\n                        and the blood orange complimented it well.\n                        ","\n                        The food was good,\n                        but the service was slow and the waiters were not very friendly.\n                        "],"tasks":["CLASSIFICATION"],"classes":["A positive review","A negative review","A neutral review"]}},"multi_task":{"summary":"Multi-Task Analysis.","description":"A request that contains 'named entity recognition' and 'classification' task.","value":{"text":["\n                        I heard of this restaurant because a friend in New York had Ottolenghi's\n                        cookbook and cooked something for us\n                        ","\n                        The burrata with blood orange and honey was great, ample portion of burrata\n                        and the blood orange complimented it well.\n                        ","\n                        The food was good,\n                        but the service was slow and the waiters were not very friendly.\n                        "],"tasks":["NER","CLASSIFICATION"]}}}}},"required":true},"responses":{"200":{"description":"Returns a list of `AnalyzeResponse` (default, char-based) or `TokenBasedAnalyzeResponse`.","content":{"application/json":{"schema":{"title":"Response Analyze Analyze  Post","type":"array","items":{"$ref":"#/components/schemas/AnalyzeResponse"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"AnalyzeRequest":{"title":"AnalyzeRequest","required":["text"],"type":"object","properties":{"text":{"title":"Text","anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]},"token_based":{"title":"Token Based","type":"boolean","default":false},"tasks":{"type":"array","items":{"$ref":"#/components/schemas/TaskEnum"},"default":[]},"classes":{"title":"Classes","type":"array","items":{"type":"string"},"default":[]},"labels":{"title":"Labels","type":"array","items":{"type":"string"},"default":[]},"multi_label":{"title":"Multi Label","type":"boolean","default":false}}},"AnalyzeResponse":{"title":"AnalyzeResponse","required":["text"],"type":"object","properties":{"text":{"title":"Text","type":"string"},"tokens":{"title":"Tokens","type":"array","items":{"type":"string"},"default":[]},"entities":{"title":"Entities","type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/TokenBasedEntity"},{"$ref":"#/components/schemas/CharBasedEntity"}]},"default":[]},"categories":{"title":"Categories","type":"array","items":{"$ref":"#/components/schemas/Category"},"default":[]},"sentiment":{"allOf":[{"$ref":"#/components/schemas/SentimentEnum"}],"default":""},"keywords":{"title":"Keywords","type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/CharBasedKeywordResponseItem"},{"$ref":"#/components/schemas/TokenBasedKeywordResponseItem"}]},"default":[]},"relations":{"title":"Relations","type":"array","items":{"$ref":"#/components/schemas/RelationResponseItem"},"default":[]}},"description":"Pydantic model for a text.\n\nA text is a string."},"Category":{"title":"Category","required":["label"],"type":"object","properties":{"score":{"title":"Score","type":"number"},"label":{"title":"Label","type":"string"}},"description":"Pydantic model for a label.\n\nA label is a non-empty string."},"CharBasedEntity":{"title":"CharBasedEntity","required":["text","label","start_char","end_char"],"type":"object","properties":{"score":{"title":"Score","type":"number"},"text":{"title":"Text","type":"string"},"label":{"title":"Label","type":"string"},"start_char":{"title":"Start Char","type":"integer"},"end_char":{"title":"End Char","type":"integer"}},"description":"Pydantic model for a char-based index of an object.\n\nstart_char and end_char are positive integers where start_char < end_char."},"CharBasedKeywordResponseItem":{"title":"CharBasedKeywordResponseItem","required":["keyword","start_char","end_char"],"type":"object","properties":{"score":{"title":"Score","type":"number"},"keyword":{"title":"Keyword","type":"string"},"start_char":{"title":"Start Char","type":"integer"},"end_char":{"title":"End Char","type":"integer"}},"description":"Pydantic model for a char-based index of an object.\n\nstart_char and end_char are positive integers where start_char < end_char."},"ExtractKeywordsResponse":{"title":"ExtractKeywordsResponse","required":["text"],"type":"object","properties":{"text":{"title":"Text","type":"string"},"tokens":{"title":"Tokens","type":"array","items":{"type":"string"},"default":[]},"keywords":{"title":"Keywords","type":"array","items":{"anyOf":[{"$ref":"#/components/schemas/CharBasedKeywordResponseItem"},{"$ref":"#/components/schemas/TokenBasedKeywordResponseItem"}]},"default":[]}},"description":"Pydantic model for a text.\n\nA text is a string."},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"Label":{"title":"Label","required":["label"],"type":"object","properties":{"label":{"title":"Label","type":"string"}},"description":"Pydantic model for a label.\n\nA label is a non-empty string."},"ModelDetailsResponse":{"title":"ModelDetailsResponse","required":["name","path"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"description":{"title":"Description","type":"string","default":""},"path":{"title":"Path","type":"string","format":"path"},"tasks":{"title":"Tasks","type":"array","items":{"$ref":"#/components/schemas/TaskDetails"},"default":[]}}},"RelationResponseItem":{"title":"RelationResponseItem","required":["entity_first","entity_second","relation","certainty"],"type":"object","properties":{"entity_first":{"title":"Entity First","anyOf":[{"$ref":"#/components/schemas/TokenBasedEntity"},{"$ref":"#/components/schemas/CharBasedEntity"}]},"entity_second":{"title":"Entity Second","anyOf":[{"$ref":"#/components/schemas/TokenBasedEntity"},{"$ref":"#/components/schemas/CharBasedEntity"}]},"relation":{"$ref":"#/components/schemas/Label"},"certainty":{"title":"Certainty","type":"number"}}},"SentimentEnum":{"title":"SentimentEnum","enum":["","positive","neutral","negative"],"type":"string","description":"An enumeration."},"TaskDetails":{"title":"TaskDetails","required":["name"],"type":"object","properties":{"name":{"title":"Name","type":"string"},"labels":{"title":"Labels","type":"array","items":{"type":"string"},"default":[]}}},"TaskEnum":{"title":"TaskEnum","enum":["NER","CLASSIFICATION","KEYWORDS","RELATIONS"],"type":"string","description":"An enumeration."},"TextRequest":{"title":"TextRequest","required":["text"],"type":"object","properties":{"text":{"title":"Text","anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}]}}},"TokenBasedEntity":{"title":"TokenBasedEntity","required":["text","label","start_token","end_token"],"type":"object","properties":{"score":{"title":"Score","type":"number"},"text":{"title":"Text","type":"string"},"label":{"title":"Label","type":"string"},"start_token":{"title":"Start Token","type":"integer"},"end_token":{"title":"End Token","type":"integer"}},"description":"Pydantic model for a token-based index of an object.\n\nstart_token and end_token are positive integers where start_token <= end_token."},"TokenBasedKeywordResponseItem":{"title":"TokenBasedKeywordResponseItem","required":["keyword","start_token","end_token"],"type":"object","properties":{"score":{"title":"Score","type":"number"},"keyword":{"title":"Keyword","type":"string"},"start_token":{"title":"Start Token","type":"integer"},"end_token":{"title":"End Token","type":"integer"}},"description":"Pydantic model for a token-based index of an object.\n\nstart_token and end_token are positive integers where start_token <= end_token."},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"type":"string"}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}}}